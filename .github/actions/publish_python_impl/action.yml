# ----------------------------------------------------------------------
# |
# |  action.yml
# |
# |  David Brownell <db@DavidBrownell.com>
# |      2024-01-26 21:38:23
# |
# ----------------------------------------------------------------------
# |
# |  Copyright David Brownell 2024
# |  Distributed under the MIT License.
# |
# ----------------------------------------------------------------------
name: "[impl] Publish"
description: "Publishes the current repository"

inputs:
  script_prefix:
    required: true
    type: string

  script_extension:
    required: true
    type: string

  shell_name:
    required: true
    type: string

  source_command:
    required: true
    type: string

  sudo_command:
    required: true
    type: string

  pypi_token:
    required: true
    type: string

  minisign_private_key:
    required: false
    type: string
    default: ""

runs:
  using: composite
  steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: stage

    - name: Bootstrap
      shell: ${{ inputs.shell_name }}
      run: |
        ${{ inputs.script_prefix }}Bootstrap${{ inputs.script_extension }} --package

    - name: Organize Artifacts
      shell: ${{ inputs.shell_name }}
      id: organize_artifacts
      run: |
        curl --location https://raw.githubusercontent.com/davidbrownell/dbrownell_DevTools/CI-v0.24.0/.github/tools/OrganizePythonArtifacts.py --output OrganizePythonArtifacts.py --no-progress-meter --fail-with-body

        ${{ inputs.source_command }} ${{ inputs.script_prefix }}Activate${{ inputs.script_extension }}
        python OrganizePythonArtifacts.py ./stage ./dist "${{ inputs.minisign_private_key }}" --verbose

        echo "python_version=$(cat ./dist/__version__)" >> $GITHUB_OUTPUT
        rm ./dist/__version__

    - name: Upload Signatures
      uses: actions/upload-artifact@v4
      with:
        name: "Minisign signatures"
        path: ./dist/*.minisig

    - name: Publish
      shell: ${{ inputs.shell_name }}
      run: |
        ${{ inputs.source_command }} ${{ inputs.script_prefix }}Activate${{ inputs.script_extension }}
        python Build.py publish ${{ inputs.pypi_token }} --production --verbose

    - name: Create Tag
      shell: ${{ inputs.shell_name }}
      run: |
        git config user.name "GitHub Action Bot"
        git config user.email "<>"

        git tag --annotate --force -m "Publish Tag" "v${{ steps.organize_artifacts.outputs.python_version }}" "${{ github.sha }}"
        git push origin "v${{ steps.organize_artifacts.outputs.python_version }}" --force

    - name: Create GitHub Release
      shell: ${{ inputs.shell_name }}
      run: |
        gh release create "v${{ steps.organize_artifacts.outputs.python_version }}" ./dist/* --generate-notes
